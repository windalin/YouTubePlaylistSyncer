<UserControl
	x:Class="YouTubePlaylistSyncer.WPF.View.MainPageView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:YouTubePlaylistSyncer.WPF.View"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewmodel="clr-namespace:YouTubePlaylistSyncer.WPF.ViewModel"
	d:DesignHeight="900"
	d:DesignWidth="1850"
	mc:Ignorable="d">
	<Grid Grid.IsSharedSizeScope="True">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" SharedSizeGroup="FirstColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="SecondColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="ThirdColumn" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Grid.Column="0"
				Width="120"
				Margin="10,5,10,5"
				Text="Enter Playlist URL" />
			<TextBox
				Grid.Column="1"
				Width="500"
				Height="20"
				MaxWidth="500"
				Text="{Binding PlaylistURL, UpdateSourceTrigger=PropertyChanged}" />
			<Button
				Grid.Column="2"
				Margin="10,5,10,5"
				Command="{Binding GetRemotePlaylistCommand}"
				Content="Get Remote Playlist Info" />
		</Grid>

		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" SharedSizeGroup="FirstColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="SecondColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="ThirdColumn" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Grid.Column="0"
				Width="120"
				Margin="10,5,10,5"
				Text="Output Location" />
			<TextBox
				Grid.Column="1"
				Width="500"
				Height="20"
				Text="{Binding OutputLocation, UpdateSourceTrigger=PropertyChanged}" />
			<Button
				Grid.Column="2"
				Margin="10,5,10,5"
				Command="{Binding BrowseOutputLocationCommand}"
				Content="Browse..." />
		</Grid>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" SharedSizeGroup="FirstColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="SecondColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="ThirdColumn" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Grid.Column="0"
				Width="120"
				Margin="10,5,10,5"
				Text="File Naming Scheme" />
			<ComboBox
				Grid.Column="1"
				Width="250"
				Height="20"
				HorizontalAlignment="Left"
				ItemsSource="{Binding NamingSchemesArray}"
				SelectedIndex="0"
				SelectedItem="{Binding NamingScheme}" />
			<Button
				Grid.Column="2"
				Margin="10,5,10,5"
				Command="{Binding ApplyNamingSchemeCommand}"
				Content="Apply Naming Scheme" />
		</Grid>

		<TabControl Grid.Row="3" Margin="5,5,5,5">
			<TabItem Header="Remote Playlist">
				<DataGrid
					x:Name="RemotePlaylistDataGrid"
					Height="600"
					Margin="10,10,10,10"
					AutoGenerateColumns="False"
					CanUserAddRows="False"
					ItemsSource="{Binding RemotePlaylistVideos}">
					<DataGrid.Resources>
						<Style TargetType="{x:Type DataGridColumnHeader}">
							<Setter Property="FontWeight" Value="SemiBold" />
						</Style>
					</DataGrid.Resources>
					<DataGrid.Columns>
						<DataGridTextColumn
							Binding="{Binding Index}"
							Header="Index"
							IsReadOnly="True" 
							Width="40"/>
						<DataGridTextColumn
							Binding="{Binding Title}"
							Header="Title"
							IsReadOnly="True" 
							Width="560"/>
						<DataGridTextColumn
							Binding="{Binding ID}"
							Header="ID"
							IsReadOnly="True" 
							Width="100"/>
						<DataGridTextColumn
							Binding="{Binding Status}"
							Header="Status"
							IsReadOnly="True" 
							Width="50"/>
						<DataGridTextColumn
							Binding="{Binding AgeRestricted}"
							Header="Age Restricted"
							IsReadOnly="True" 
							Width="90"/>
						<DataGridTextColumn
							Binding="{Binding Duration}"
							Header="Duration"
							IsReadOnly="True" 
							Width="95"/>
						<DataGridTextColumn
							Binding="{Binding FilenameOnDisk}"
							Header="Filename on Disk"
							IsReadOnly="False" 
							Width="575"/>
						<DataGridTextColumn
							Binding="{Binding Action}"
							Header="Action"
							IsReadOnly="False" 
							Width="100"/>
						<DataGridTextColumn
							Binding="{Binding DownloadStatus}"
							Header="Download Status"
							IsReadOnly="True" 
							Width="110"/>
					</DataGrid.Columns>
				</DataGrid>
			</TabItem>

			<TabItem Header="Local Playlist" IsEnabled="False" Visibility="Hidden">
				<DataGrid
					Height="600"
					Margin="10,10,10,10"
					AutoGenerateColumns="False"
					CanUserAddRows="False">
					<DataGrid.Resources>
						<Style TargetType="{x:Type DataGridColumnHeader}">
							<Setter Property="FontWeight" Value="SemiBold" />
						</Style>
					</DataGrid.Resources>
					<DataGrid.Columns>
						<DataGridTextColumn Header="Index" />
						<DataGridTextColumn Header="Title" />
						<DataGridTextColumn Header="ID" />
						<DataGridTextColumn Header="Status" />
						<DataGridTextColumn Header="Duration" />
						<DataGridTextColumn Header="Filename on Disk" />
						<DataGridTextColumn Header="Action" />
						<DataGridTextColumn Header="Download Status" />
					</DataGrid.Columns>
				</DataGrid>
			</TabItem>

			<TabItem Header="Difference" IsEnabled="False" Visibility="Hidden">
				<DataGrid
					Height="600"
					Margin="10,10,10,10"
					AutoGenerateColumns="False"
					CanUserAddRows="False">
					<DataGrid.Resources>
						<Style TargetType="{x:Type DataGridColumnHeader}">
							<Setter Property="FontWeight" Value="SemiBold" />
						</Style>
					</DataGrid.Resources>
				</DataGrid>
			</TabItem>
		</TabControl>

		<Grid Grid.Row="4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" SharedSizeGroup="FirstColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="SecondColumn" />
				<ColumnDefinition Width="auto" SharedSizeGroup="ThirdColumn" />
			</Grid.ColumnDefinitions>
			<Button
				Grid.Column="0"
				Width="120"
				Margin="10,5,10,5"
				HorizontalAlignment="Left"
				Command="{Binding BeginDownloadCommand}"
				Content="Begin Download" />
			<!--  AutomationdId is equal to Name if it is set.  -->
			<Button
				Name="TestButton"
				Visibility="Hidden"
				Grid.Column="2"
				Width="120"
				Margin="10,5,10,5"
				HorizontalAlignment="Left"
				Command="{Binding TestCommand}"
				Content="Test" />
		</Grid>
	</Grid>
</UserControl>
